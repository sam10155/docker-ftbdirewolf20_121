name: Auto Update and Push Docker Image

on:
  schedule:
    - cron: "0 */6 * * *"  # Every 6 hours
  workflow_dispatch:

jobs:
  update-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python deps
        run: pip install requests beautifulsoup4

      - name: Check and update Dockerfile
        id: check_update
        run: |
          import re
          import requests
          from bs4 import BeautifulSoup
          from pathlib import Path

          url = "https://www.feed-the-beast.com/modpacks/126-ftb-presents-direwolf20-121"
          dockerfile_path = Path("Dockerfile")
          version_path = Path("VERSION")

          # Scrape version
          res = requests.get(url)
          soup = BeautifulSoup(res.text, "html.parser")
          ver = soup.find("div", class_="Badge_value__1GilC").text.strip()

          # Compare with current
          current = version_path.read_text().strip() if version_path.exists() else ""
          if ver == current:
              print("::set-output name=updated::false")
              exit(0)

          # Update Dockerfile with VER
          dockerfile = dockerfile_path.read_text()
          updated_dockerfile = re.sub(r'^ENV VER=\d+', f'ENV VER={ver}', dockerfile, flags=re.M)

          if dockerfile != updated_dockerfile:
              dockerfile_path.write_text(updated_dockerfile)
              version_path.write_text(ver)
              print("::set-output name=updated::true")
              print(f"::set-output name=version::{ver}")
          else:
              print("::set-output name=updated::false")

      - name: Commit updated Dockerfile
        if: steps.check_update.outputs.updated == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "Update modpack VER to ${{ steps.check_update.outputs.version }}"
          git push

      - name: Log in to Docker Hub
        if: steps.check_update.outputs.updated == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: steps.check_update.outputs.updated == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: sam10155/ftbdirewolf20_121:latest
